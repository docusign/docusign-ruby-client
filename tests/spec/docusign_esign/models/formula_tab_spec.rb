require 'docusign_esign/models/formula_tab'

describe DocuSign_eSign::FormulaTab do
  describe '.attribute_map' do
    it 'returns a map between variable names and JSON keys', :aggregate_failures do
      map = DocuSign_eSign::FormulaTab.attribute_map

      expect(map[:anchor_allow_white_space_in_characters]).to eq(:anchorAllowWhiteSpaceInCharacters)
      expect(map[:anchor_allow_white_space_in_characters_metadata]).to eq(:anchorAllowWhiteSpaceInCharactersMetadata)
      expect(map[:anchor_case_sensitive]).to eq(:anchorCaseSensitive)
      expect(map[:anchor_case_sensitive_metadata]).to eq(:anchorCaseSensitiveMetadata)
      expect(map[:anchor_horizontal_alignment]).to eq(:anchorHorizontalAlignment)
      expect(map[:anchor_horizontal_alignment_metadata]).to eq(:anchorHorizontalAlignmentMetadata)
      expect(map[:anchor_ignore_if_not_present]).to eq(:anchorIgnoreIfNotPresent)
      expect(map[:anchor_ignore_if_not_present_metadata]).to eq(:anchorIgnoreIfNotPresentMetadata)
      expect(map[:anchor_match_whole_word]).to eq(:anchorMatchWholeWord)
      expect(map[:anchor_match_whole_word_metadata]).to eq(:anchorMatchWholeWordMetadata)
      expect(map[:anchor_string]).to eq(:anchorString)
      expect(map[:anchor_string_metadata]).to eq(:anchorStringMetadata)
      expect(map[:anchor_tab_processor_version]).to eq(:anchorTabProcessorVersion)
      expect(map[:anchor_tab_processor_version_metadata]).to eq(:anchorTabProcessorVersionMetadata)
      expect(map[:anchor_units]).to eq(:anchorUnits)
      expect(map[:anchor_units_metadata]).to eq(:anchorUnitsMetadata)
      expect(map[:anchor_x_offset]).to eq(:anchorXOffset)
      expect(map[:anchor_x_offset_metadata]).to eq(:anchorXOffsetMetadata)
      expect(map[:anchor_y_offset]).to eq(:anchorYOffset)
      expect(map[:anchor_y_offset_metadata]).to eq(:anchorYOffsetMetadata)
      expect(map[:bold]).to eq(:bold)
      expect(map[:bold_metadata]).to eq(:boldMetadata)
      expect(map[:conceal_value_on_document]).to eq(:concealValueOnDocument)
      expect(map[:conceal_value_on_document_metadata]).to eq(:concealValueOnDocumentMetadata)
      expect(map[:conditional_parent_label]).to eq(:conditionalParentLabel)
      expect(map[:conditional_parent_label_metadata]).to eq(:conditionalParentLabelMetadata)
      expect(map[:conditional_parent_value]).to eq(:conditionalParentValue)
      expect(map[:conditional_parent_value_metadata]).to eq(:conditionalParentValueMetadata)
      expect(map[:custom_tab_id]).to eq(:customTabId)
      expect(map[:custom_tab_id_metadata]).to eq(:customTabIdMetadata)
      expect(map[:disable_auto_size]).to eq(:disableAutoSize)
      expect(map[:disable_auto_size_metadata]).to eq(:disableAutoSizeMetadata)
      expect(map[:document_id]).to eq(:documentId)
      expect(map[:document_id_metadata]).to eq(:documentIdMetadata)
      expect(map[:error_details]).to eq(:errorDetails)
      expect(map[:font]).to eq(:font)
      expect(map[:font_color]).to eq(:fontColor)
      expect(map[:font_color_metadata]).to eq(:fontColorMetadata)
      expect(map[:font_metadata]).to eq(:fontMetadata)
      expect(map[:font_size]).to eq(:fontSize)
      expect(map[:font_size_metadata]).to eq(:fontSizeMetadata)
      expect(map[:form_order]).to eq(:formOrder)
      expect(map[:form_order_metadata]).to eq(:formOrderMetadata)
      expect(map[:form_page_label]).to eq(:formPageLabel)
      expect(map[:form_page_label_metadata]).to eq(:formPageLabelMetadata)
      expect(map[:form_page_number]).to eq(:formPageNumber)
      expect(map[:form_page_number_metadata]).to eq(:formPageNumberMetadata)
      expect(map[:formula]).to eq(:formula)
      expect(map[:formula_metadata]).to eq(:formulaMetadata)
      expect(map[:height]).to eq(:height)
      expect(map[:height_metadata]).to eq(:heightMetadata)
      expect(map[:hidden]).to eq(:hidden)
      expect(map[:hidden_metadata]).to eq(:hiddenMetadata)
      expect(map[:is_payment_amount]).to eq(:isPaymentAmount)
      expect(map[:is_payment_amount_metadata]).to eq(:isPaymentAmountMetadata)
      expect(map[:italic]).to eq(:italic)
      expect(map[:italic_metadata]).to eq(:italicMetadata)
      expect(map[:locale_policy]).to eq(:localePolicy)
      expect(map[:locked]).to eq(:locked)
      expect(map[:locked_metadata]).to eq(:lockedMetadata)
      expect(map[:max_length]).to eq(:maxLength)
      expect(map[:max_length_metadata]).to eq(:maxLengthMetadata)
      expect(map[:merge_field]).to eq(:mergeField)
      expect(map[:merge_field_xml]).to eq(:mergeFieldXml)
      expect(map[:name]).to eq(:name)
      expect(map[:name_metadata]).to eq(:nameMetadata)
      expect(map[:original_value]).to eq(:originalValue)
      expect(map[:original_value_metadata]).to eq(:originalValueMetadata)
      expect(map[:page_number]).to eq(:pageNumber)
      expect(map[:page_number_metadata]).to eq(:pageNumberMetadata)
      expect(map[:payment_details]).to eq(:paymentDetails)
      expect(map[:recipient_id]).to eq(:recipientId)
      expect(map[:recipient_id_guid]).to eq(:recipientIdGuid)
      expect(map[:recipient_id_guid_metadata]).to eq(:recipientIdGuidMetadata)
      expect(map[:recipient_id_metadata]).to eq(:recipientIdMetadata)
      expect(map[:require_all]).to eq(:requireAll)
      expect(map[:require_all_metadata]).to eq(:requireAllMetadata)
      expect(map[:required]).to eq(:required)
      expect(map[:required_metadata]).to eq(:requiredMetadata)
      expect(map[:require_initial_on_shared_change]).to eq(:requireInitialOnSharedChange)
      expect(map[:require_initial_on_shared_change_metadata]).to eq(:requireInitialOnSharedChangeMetadata)
      expect(map[:round_decimal_places]).to eq(:roundDecimalPlaces)
      expect(map[:round_decimal_places_metadata]).to eq(:roundDecimalPlacesMetadata)
      expect(map[:sender_required]).to eq(:senderRequired)
      expect(map[:sender_required_metadata]).to eq(:senderRequiredMetadata)
      expect(map[:shared]).to eq(:shared)
      expect(map[:shared_metadata]).to eq(:sharedMetadata)
      expect(map[:smart_contract_information]).to eq(:smartContractInformation)
      expect(map[:status]).to eq(:status)
      expect(map[:status_metadata]).to eq(:statusMetadata)
      expect(map[:tab_group_labels]).to eq(:tabGroupLabels)
      expect(map[:tab_group_labels_metadata]).to eq(:tabGroupLabelsMetadata)
      expect(map[:tab_id]).to eq(:tabId)
      expect(map[:tab_id_metadata]).to eq(:tabIdMetadata)
      expect(map[:tab_label]).to eq(:tabLabel)
      expect(map[:tab_label_metadata]).to eq(:tabLabelMetadata)
      expect(map[:tab_order]).to eq(:tabOrder)
      expect(map[:tab_order_metadata]).to eq(:tabOrderMetadata)
      expect(map[:tab_type]).to eq(:tabType)
      expect(map[:tab_type_metadata]).to eq(:tabTypeMetadata)
      expect(map[:template_locked]).to eq(:templateLocked)
      expect(map[:template_locked_metadata]).to eq(:templateLockedMetadata)
      expect(map[:template_required]).to eq(:templateRequired)
      expect(map[:template_required_metadata]).to eq(:templateRequiredMetadata)
      expect(map[:tooltip]).to eq(:tooltip)
      expect(map[:tool_tip_metadata]).to eq(:toolTipMetadata)
      expect(map[:underline]).to eq(:underline)
      expect(map[:underline_metadata]).to eq(:underlineMetadata)
      expect(map[:validation_message]).to eq(:validationMessage)
      expect(map[:validation_message_metadata]).to eq(:validationMessageMetadata)
      expect(map[:validation_pattern]).to eq(:validationPattern)
      expect(map[:validation_pattern_metadata]).to eq(:validationPatternMetadata)
      expect(map[:value]).to eq(:value)
      expect(map[:value_metadata]).to eq(:valueMetadata)
      expect(map[:width]).to eq(:width)
      expect(map[:width_metadata]).to eq(:widthMetadata)
      expect(map[:x_position]).to eq(:xPosition)
      expect(map[:x_position_metadata]).to eq(:xPositionMetadata)
      expect(map[:y_position]).to eq(:yPosition)
      expect(map[:y_position_metadata]).to eq(:yPositionMetadata)
    end
  end
end